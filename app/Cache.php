<?php
namespace Nimbium\MyPlugin;

class Cache extends Plugin {

  /**
    * Retrieves value from cache, if enabled/present, else returns value
    *    generated by callback().
    *
    * @param string $key Key value of cache to retrieve
    * @param function $callback Result to return/set if does not exist in cache
    * @return string Cached value of key
    */
  public static function get_object( $key = null, $callback ) {

    $object_cache_group = self::$settings['object_cache_group'] ?: sanitize_title( self::$settings['data']['Name'] );
    $object_cache_expire = self::$settings['object_cache_expire'] ?: 86400; // Default to 24 hours of null

    // Set key variable
    $caller = end( debug_backtrace( DEBUG_BACKTRACE_IGNORE_ARGS, 2 ) );
    $caller_class_name = strtolower( end( explode( "\\", $caller['class'] ) ) );
    $object_cache_key = $caller_class_name . '_' . $caller['function'] . ( $key ? '_' . $key : '' );

    // Try to get the value of the cache
    $result = wp_cache_get( $object_cache_key, $object_cache_group );

    // If result wasn't found/returned and/or caching is disabled, set & return the value from $callback
    if(!$result) {
      $result = $callback();
      wp_cache_set( $object_cache_key, $result, $object_cache_group, $object_cache_expire);
    }

    return $result;

  }

  /**
    * Flushes the object cache, if enabled. Parameters are not used but are
    *    when passed by 'publish_post' action hook.
    *
    * Example usage: Cache::flush();
    *
    * @param int $ID The ID of the post being published
    * @param WP_Post The post object that is being published
    * @return mixed Returns success as JSON string if called by AJAX,
    *    else true/false
    */
  public static function flush($ID = null, $post = null) {

    $result = array('success' => true);

    try {
      wp_cache_flush();
    } catch (Exception $e) {
      $result = array('success' => false, 'message' => $e->getMessage());
    }

    if( defined('DOING_AJAX') && DOING_AJAX ) {
      echo json_encode($result);
      wp_die();
    }
    return $result['success'];

  }

}
